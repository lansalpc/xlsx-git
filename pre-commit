#!/bin/bash
#
# pre-commit-excel: have git handle xlsx files by deflating them and storing
#                   the XML in the repository, not the zip file. 
#
#                   companion to post-commit-excel
#

# -- config -- #
TMP_PREFIX='.~' # prefix XML directory--should NOT conflict with 
                   # anything in your repo
export TMP_PREFIX

# -- end config -- #

echo
echo "=== Pre-commit XLSX processing ===="

function unpack_xlsx () {
    # unzip the xlsx file 
    echo "TMP_PREFIX = $TMP_PREFIX"
    if [ -z "$TMP_PREFIX" ]; then
        echo "TMP_PREFIX variable is not set"
        exit 3
    fi
    if [ -e "$1" ]; then
        if [ -e "${TMP_PREFIX}$1" ]; then rm -rf "${TMP_PREFIX}$1"; fi
        unzip "$1" -d "${TMP_PREFIX}$1"
    else
        # abort the commit if this isn't an excel file somehow
        echo "$1 is not an xlsx file. this is a bug."
        exit 3
    fi
}

# create a placeholder text file for the .xlsx file, which uniquely identifies
# it and prevents losing work on a checkout
function replace_with_placeholder () {
    sha1sum "$1" | tee "$1" > /dev/null # hack for overwriting without temp file
}


function reformat_xmls () {
    # reformat the xml file to many lines
    find "$1" -name "*.xml" -type f -exec xmllint --output '{}' --format '{}' \;
}

# check that the swap file isn't there (if the docx has been staged)
git diff -z --name-only --cached -- *.docx | xargs -0 bash -c 'for _file; do
    newfile=$(echo ${_file##*/})
    dir=$(echo ${_file%/*})
    swapfile="$dir/~\$$newfile"
    echo "$swapfile"
    if [ -e "$swapfile" ]; then
        echo "$swapfile swap file present: close docx file before committing"
        exit 2 # word file is open
    fi
done' bash

# unpack all the zipfiles (if the xlsx has been staged)
export -f unpack_xlsx
export -f replace_with_placeholder
export -f reformat_xmls

git diff -z --name-only --cached -- *.docx | xargs -0 bash -c 'for file; do
    new_file=$(echo ${file##*/})
    dir=$(echo ${file%/*})
    cd "$dir"
    pwd
    unpack_xlsx "$new_file"
    replace_with_placeholder "$new_file"
    echo -n "Commit placeholder file: "
    file "$new_file"
    reformat_xmls "${TMP_PREFIX}$new_file"
    cd -

    # stage the XML files and the placeholder

    git add "$dir/${TMP_PREFIX}$new_file"
    git add "$dir/$new_file"  
done' bash

echo "=== End of pre-commit processing ==="
echo

